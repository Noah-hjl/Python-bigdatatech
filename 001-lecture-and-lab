001-introduction and applications

1. Basic concepts in Python:
Math: Basic arithmatic operations.
if/elif/else: Conditional logic.
for/while: Looping through ranges, lists, or conditions.
continue: Skip an iteration.
break: Exit a loop early.
functions: Rusable blocks of code.

2. Variables:
A variable is created with an "assignment", with the variable's name on the left and the value it should store on the right.
Each variable is like a box, identified by the name of the variable.

3. Key concepts for dynamic typing in python :
   1. No explicit type declarations:
      eg:
      x=42   # x is an integer（数）
      x="first year"  # Now x is a string（字符串）
   2. Flexibility:
      eg: Variables can be reassigned to values of different types freely.This makes the code concise and adaptable for rapid prototyping.

4. Dynamic Typing and Static Typing:
   1. Static typing （静态类型，比如Java,C++)
   eg:
   int x = 5
  （此类型需提前声明，比如这里提前声明变量x为int（整数），此后x中就也只能储存整数）
   2. Dynamic typing（动态类型，比如python，java script）
  （比如同一个类型的x可以在运行的时候从数值变成字符串，且不会报错）

5. Data types（较为重要）:
   1. int---integer number("5""-3") 
      整数---numetric（数值型）---immutable（不可变）
   2. float---floating-point numbers("3.14""-0.5") 
      浮点数---numetric--immutable
   3. complex---complex numbers("3+4j") 
      复数---numetric---immutable
   4. str---sequence of unicode characters("hello""python") 
      字符串---text---immutable
   5. bool---boolean values("True" or "False") 
      布尔类型---boolean---immutable

   6. list---有序、可变的集合---[1,"a",True]
   7. tuple---无序、不可变的集合---(1,"a",True)
   8. set---无序的元素集合---{1,2,3}

6. Indentation: Whitespace matters: indentation indicates code block, the common convetion is to use 4 space.
   eg: the difference between
   1. if x<4:
          y=x*2
          print(x)
   2. if x<4:
          y=x*2
      print(x)
white space within lines doesn't matter at all, just make it hard to read

7. parentheses（调用） for grouping or calling
   eg: print('first value", 1) arguments（参数） go inside of parentheses
   kind of blank: if we want to call a function, we need to add a blank parenthese

8. semantics (is all about meaning)
   1. variable are just references to different objects, can be changed in the process
   2.eg:
     x = 4 (for now is a integer)
     x= [1, 2, 3] (for now is a list)
   3.同时变化 eg:
     x = [1, 2, 3]
     y = x
     x.append(4) (append means add a value into the list)
     print(y)
   4. integer is immutable（理解成从上到下走，下部影响上）

9. type complex number
   1. eg:
   x = a.b
   print(x.real, "+", x.img, "i") lead to a+bi

10. a @ b marix product of a and b

11. pipe and & and ^（二进制的东西） & indicates the shared number(1) and pipe(|) indicates the plus number(1) and ^ (same 0 different 1)
还有 按位取反 右位移 左位移 实际使用时去ai搜一下

12. bin(4) 
    transform it into binary form

    4 | 10
    bin (4|10)

13. tips: a += 2 (equals to a = a +2) (+= calls compound assignment 同理 -=）

14. // only keep the whole number part and / keep the exact number

15. comparison operators:
    1. == equal to
    2. != not equal to
    3. >=/<=/>/< 




    







